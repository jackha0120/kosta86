<?xml version="1.0" encoding="UTF-8"?>
<aop-reference-model>
<aop-project name="spring1111"/>
<aop-project name="spring1113"/>
<aop-project name="spring1117">
<aspect-definition advice-class-name="ex1.After_ThrowAdvice" advice-method-name="commThrow" advice-type="AFTER_THROWING" aspect-end-line-number="17" aspect-name="afterthrowAdvice" aspect-start-line-number="16" factory-id="org.springframework.ide.eclipse.aop.core.beanAspectDefinitionElementFactory" file="/spring1117/src/ex1/ex1.xml" pointcut-expression="execution(* ex1.DaoIm*.fifth())" proxy-target-class="false" throwing="ew">
<aop-reference advice-type="AFTER_THROWING" bean="1:BeansModel|2:spring1117|3:src/ex1/ex1.xml|7:beans:9|8:dao:20" bean-file="/spring1117/src/ex1/ex1.xml" bean-start-line="20" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1117/src/ex1/ex1.xml" source="=spring1117/src&lt;ex1{After_ThrowAdvice.java[After_ThrowAdvice~commThrow~QException;" source-start-line="4" target="=spring1117/src&lt;ex1{DaoImple.java[DaoImple~fifth" target-start-line="6"/>
</aspect-definition>
<aspect-definition advice-class-name="ex1.BizAdvice" advice-method-name="beforMethod" advice-type="BEFORE" aspect-end-line-number="22" aspect-name="myBiz" aspect-start-line-number="22" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/spring1117/src/ex1/ex2.xml" pointcut-expression="execution(* ex1.BizService*.*(..))" proxy-target-class="false">
<aop-reference advice-type="BEFORE" bean="1:BeansModel|2:spring1117|3:src/ex1/ex2.xml|7:beans:9|8:target:24" bean-file="/spring1117/src/ex1/ex2.xml" bean-start-line="24" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1117/src/ex1/ex2.xml" source="=spring1117/src&lt;ex1{BizAdvice.java[BizAdvice~beforMethod" source-start-line="27" target="=spring1117/src&lt;ex1{BizServiceImple.java[BizServiceImple~testbizMethod2" target-start-line="13"/>
<aop-reference advice-type="BEFORE" bean="1:BeansModel|2:spring1117|3:src/ex1/ex2.xml|7:beans:9|8:target:24" bean-file="/spring1117/src/ex1/ex2.xml" bean-start-line="24" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1117/src/ex1/ex2.xml" source="=spring1117/src&lt;ex1{BizAdvice.java[BizAdvice~beforMethod" source-start-line="27" target="=spring1117/src&lt;ex1{BizServiceImple.java[BizServiceImple~bizMethod1" target-start-line="8"/>
<aop-reference advice-type="BEFORE" bean="1:BeansModel|2:spring1117|3:src/ex1/ex2.xml|7:beans:9|8:target:24" bean-file="/spring1117/src/ex1/ex2.xml" bean-start-line="24" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1117/src/ex1/ex2.xml" source="=spring1117/src&lt;ex1{BizAdvice.java[BizAdvice~beforMethod" source-start-line="27" target="=spring1117/src&lt;ex1{BizServiceImple.java[BizServiceImple~securityMethod" target-start-line="18"/>
</aspect-definition>
</aop-project>
<aop-project name="spring1112"/>
<aop-project name="spring1114">
<aspect-definition advice-class-name="exam.BeforeAdvice" advice-method-name="checkLogin" advice-type="BEFORE" aspect-end-line-number="21" aspect-name="beforeAdvise" aspect-start-line-number="21" factory-id="org.springframework.ide.eclipse.aop.core.beanAspectDefinitionElementFactory" file="/spring1114/src/exam/exam.xml" pointcut-expression="execution(* security*(..))" proxy-target-class="false">
<aop-reference advice-type="BEFORE" bean="1:BeansModel|2:spring1114|3:src/exam/exam.xml|7:beans:9|8:bean:25" bean-file="/spring1114/src/exam/exam.xml" bean-start-line="25" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1114/src/exam/exam.xml" source="=spring1114/src&lt;exam{BeforeAdvice.java[BeforeAdvice~checkLogin" source-start-line="9" target="=spring1114/src&lt;exam{SecurityImple.java[SecurityImple~securityMethod" target-start-line="5"/>
</aspect-definition>
<aspect-definition advice-class-name="ex3.AfterAdvice" advice-method-name="afterReturningMethod" advice-type="AFTER_RETURNING" aspect-end-line-number="24" aspect-name="afterReturnAdvice" aspect-start-line-number="23" factory-id="org.springframework.ide.eclipse.aop.core.beanAspectDefinitionElementFactory" file="/spring1114/src/ex3/ex3.xml" pointcut-expression="execution(* ex3.DaoImp.second())" proxy-target-class="false" returning="ret">
<aop-reference advice-type="AFTER_RETURNING" bean="1:BeansModel|2:spring1114|3:src/ex3/ex3.xml|7:beans:7|8:dao:27" bean-file="/spring1114/src/ex3/ex3.xml" bean-start-line="27" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1114/src/ex3/ex3.xml" source="=spring1114/src&lt;ex3{AfterAdvice.java[AfterAdvice~afterReturningMethod~QJoinPoint;~QObject;" source-start-line="7" target="=spring1114/src&lt;ex3{DaoImp.java[DaoImp~second" target-start-line="19"/>
</aspect-definition>
<aspect-definition advice-class-name="ex3.TimeAdvice" advice-method-name="checkTime" advice-type="AROUND" aspect-end-line-number="18" aspect-name="checkTimeAdvice" aspect-start-line-number="18" factory-id="org.springframework.ide.eclipse.aop.core.beanAspectDefinitionElementFactory" file="/spring1114/src/ex3/ex3.xml" pointcut-expression="execution(* ex3.DaoImp.first())" proxy-target-class="false">
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:spring1114|3:src/ex3/ex3.xml|7:beans:7|8:dao:27" bean-file="/spring1114/src/ex3/ex3.xml" bean-start-line="27" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1114/src/ex3/ex3.xml" source="=spring1114/src&lt;ex3{TimeAdvice.java[TimeAdvice~checkTime~QProceedingJoinPoint;" source-start-line="7" target="=spring1114/src&lt;ex3{DaoImp.java[DaoImp~first" target-start-line="6"/>
</aspect-definition>
</aop-project>
<aop-project name="spring1118">
<aspect-definition advice-class-name="org.springframework.transaction.interceptor.TransactionInterceptor" advice-method-name="invoke" advice-method-parameter-types="org.aopalliance.intercept.MethodInvocation" advice-type="AROUND" aspect-end-line-number="38" aspect-name="tranctionAdvice" aspect-start-line-number="38" factory-id="org.springframework.ide.eclipse.aop.core.javaAdvisorDefinitionElementFactory" file="/spring1118/src/config/config2.xml" pointcut-expression="execution(* *.DaoServiceImple.transactionTest(..))" proxy-target-class="false">
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:spring1118|3:src/config/config2.xml|7:beans:11|8:dao:27" bean-file="/spring1118/src/config/config2.xml" bean-start-line="27" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/spring1118/src/config/config2.xml" source="=spring1118/C:\/kosta86\/spring\/workspace\/spring1118\/WebContent\/WEB-INF\/lib\/spring-tx-4.1.1.RELEASE.jar&lt;org.springframework.transaction.interceptor(TransactionInterceptor.class[TransactionInterceptor~invoke~Lorg.aopalliance.intercept.MethodInvocation;" source-start-line="-1" target="=spring1118/src&lt;dao{DaoServiceImple.java[DaoServiceImple~transactionTest~QMJoinVO;" target-start-line="16"/>
</aspect-definition>
</aop-project>
</aop-reference-model>